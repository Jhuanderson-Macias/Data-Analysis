{
    "collab_server" : "",
    "contents" : "library(googleVis)\n\nlibrary(RCurl)\nlibrary(RJSONIO)\n\n# webpage <- paste0(\"http://powerful-meadow-8588.herokuapp.com/\",\n#          \"data/12months_departures_joiners.json\", sep=\"\")\n# \n# data <- fromJSON(getURL(webpage)) \n\n##\n# save(data, file=\"glitch1.RData\")\nload(file=\"glitch1.RData\")\n##\n\ntypeof(data)\nnames(data)\n\ntypeof(data$nodes)\nlength(data$nodes)\n\ndata$nodes[[1]]\n\nnodes.info <- \n  do.call(\"rbind\", \n          lapply(data$nodes, data.frame))\n\nhead(nodes.info)\n\ntail(nodes.info)\n\nmonths <- unique(nodes.info$month)\nmonths\n\ntable(nodes.info$month)\n\nlevels <- unique(nodes.info$name)\nlevels\n\ntable(nodes.info$name)\n\n\n# Links \n\ntypeof(data$links)\nlength(data$links)\n\ndata$links[[1]]\n\nlinks.info <- \n  data.frame(do.call(\"rbind\", data$links))\n\nhead(links.info)\n\ntail(links.info)\n\nlinks.info$SourceName <- \n  paste0(links.info$source, \"-\",\n         nodes.info[links.info$source+1, \"name\"])\n\nhead(links.info)\n\nlinks.info$TargetName <- \n  paste0(links.info$target, \"-\",\n         nodes.info[links.info$target+1, \"name\"])\n\nhead(links.info)\n\n# Sankey chart data for first two monthly periods\n\nsource.data <- \n  nodes.info[nodes.info$month %in% \n               c(\"Nov-11\", \"Dec-11\", \"Jan-12\"), \n             \"node\"]\n\nsource.data\n\nlinks.data <- \n  links.info[links.info$source %in% source.data,\n             c(\"SourceName\", \"TargetName\", \"value\")]\n\nhead(links.data)\n\ntail(links.data)\n\n\noptions <- \"{\n  node: {\n    label: {\n      fontName: 'Times-Roman',\n      fontSize: 12,\n      color: '#000',\n      bold: true,\n      italic: false\n    },\n    labelPadding: 6, \n    nodePadding: 30, \n    width: 5         \n  },\n  link: {\n    color: { fill: '#d799ae' } \n  }\n}\"\n\n\n\nchart.data <- \n  gvisSankey(links.data,\n             from=\"SourceName\", \n             to=\"TargetName\",\n             weight=\"value\",\n             options=list(\n               width=600, height=500,\n               sankey=options\n             ))\nplot(chart.data)\n\nmonths.names <- data.frame(\n  rbind(c(\"Nov-11...\", \n          \"Dec-11...\", \n          \"Jan-12...\")))\n         \nmonths.names\n\nnames(months.names) <- \n  paste(c(\"Nov-11\", \"Dec-11\", \"Jan-12\"),\n        c(\"Dec-11\", \"Jan-12\", \"Feb-12\"),\n        sep=\"====>\")\n\nmonths.names\n\nchart.names <- gvisTable(months.names, \n                         options=list(\n                           width=600))\n\nplot(chart.names)\n\nmonths.info <- \n  nodes.info[nodes.info$month %in% \n               c(\"Nov-11\", \"Dec-11\", \"Jan-12\", \"Feb-12\"), \n             c(\"month\", \"node\", \"name\")]\n\nchart.table <- gvisTable(months.info)\n\nplot(chart.table)\n\nchart1 <- gvisMerge(\n  gvisMerge(chart.data, chart.names),\n  chart.table, horizontal = TRUE)\n\nplot(chart1)\n\n# Encapsulate the above in the following function\n\nglitch.chart <- function(src_months, tbl_months) {\n  # nodes for the src_months\n  source.nodes <- \n    nodes.info[nodes.info$month %in% src_months, \"node\"]\n  \n  # links data for the source nodes\n  df <- links.info[links.info$source %in% source.nodes,\n                   c(\"SourceName\", \"TargetName\", \"value\")]\n  \n  chart.sankey <- \n    gvisSankey(df,\n               from=\"SourceName\", \n               to=\"TargetName\", \n               weight=\"value\",\n               options=list(\n                 width=750, height=500,\n                 sankey=options\n               ))\n  \n  months.names <- data.frame(rbind(\n        paste0(as.character(src_months), \"...\", sep=\"\")))\n  \n  names(months.names) <- paste(src_months, tbl_months[-1], \n                               sep=\"====>\")\n  \n  chart.names <- gvisTable(months.names, \n                           options=list(\n                             width=750))\n    \n  months.info <- \n    nodes.info[nodes.info$month %in% tbl_months, \n               c(\"month\", \"node\", \"name\")]\n  \n  chart.table <- gvisTable(months.info)\n                           \n  return (gvisMerge(\n            gvisMerge(chart.sankey, chart.names),\n                    chart.table, horizontal = TRUE))\n}\n\nchart1 <- glitch.chart(months[1:3], months[1:4])\nchart2 <- glitch.chart(months[4:6], months[4:7])\nchart3 <- glitch.chart(months[7:10], months[7:11])\nchart4 <- glitch.chart(months[11:13], months[11:14])\n\nplot(chart1)\nplot(chart2)\nplot(chart3)\nplot(chart4)\n\nchart.final <- gvisMerge(\n  gvisMerge(chart1, chart2),\n  gvisMerge(chart3, chart4))\n\nplot(chart.final)\n\nprint(chart1, file = \"chart1.html\")\nprint(chart2, file = \"chart2.html\")\nprint(chart3, file = \"chart3.html\")\nprint(chart4, file = \"chart4.html\")\nprint(chart.final, file=\"chart_final.html\")\n\n\n#####\n\nhardcore <- \n  nodes.info[nodes.info$name == 'Hardcore', ]\n\nhardcore\n\nchart5 <- gvisColumnChart(hardcore,\n                       xvar=\"month\", \n                       yvar=c(\"joining\",\"departing\"),\n                       options=list(\n                         legend=\"top\",\n                         title=\"Hardcore Players\"))\nplot(chart5)\n\nprint(chart5, file = \"chart5.html\")\n\n# order levels from game website\n\norder.levels <- c(\"Hardcore\", \n                  \"Forum\", \n                  \"Moderate\", \"Moderate Winners\",\n                  \"Moderate Losers\", \"Moderate Farmers\", \n                  \"Moderate Miscellanea\",\n                  \"Casual\", \"Casual Winners\", \n                  \"Casual Losers\", \"Casual Forum\")\norder.levels\n\nmonths <- as.character(months)\nmonths\n\ntotals <- matrix(NA, \n                 nrow=length(months), \n                 ncol=length(order.levels))\n\ncolnames(totals) <- \n  order.levels[length(order.levels):1]\nrownames(totals) <- months\n\ntotals[1:5,c(1:2, 10:11)]\n\n# nodes for first month\n\nm <- months[1]\nm\n\nm.nodes <- nodes.info[nodes.info$month == m, \"node\"]\nm.nodes\n\n# all the source links for first month\n\nm.links <- links.info[\n             links.info$source %in% m.nodes, \n             c(\"source\", \"value\")]\n\nhead(m.links, n = 3)\ntail(m.links, n = 3)\n\ndf <- aggregate(m.links$value, \n                by=list(m.links$source), \n                FUN = sum)\ndf\n\nnames(df) <- c(\"node\", \"Total\")\ndf\n\ndf$name <- \n  nodes.info[df$node+1, \"name\"]\ndf\n  \nprint(sum(df$Total))\n\ntotals[m,as.character(df$name)] <- df$Total\n\nprint(cbind(totals[m,]))\n\n\n\n# For the middle months\n\nfor (m in months[2:(length(months)-1)])\n{\n  print(m)\n  m.nodes <- nodes.info[nodes.info$month == m, \"node\"]\n  m.nodes\n  \n  m.targetlinks <- \n    links.info[links.info$target %in% m.nodes, \n               c(\"target\", \"value\")]\n  head(m.targetlinks, n = 3)\n  \n  m.sourcelinks <- \n    links.info[links.info$source %in% m.nodes, \n               c(\"source\", \"value\")]\n  head(m.sourcelinks, n = 3)\n  \n  df.targetlinks <- \n    aggregate(m.targetlinks$value, \n              by=list(m.targetlinks$target), \n              FUN = sum)\n  \n  names(df.targetlinks) <- \n    c(\"node\", \"TargetTotal\")\n  \n  df.targetlinks\n  \n  df.sourcelinks <- \n    aggregate(m.sourcelinks$value,\n              by=list(m.sourcelinks$source), \n              FUN = sum)\n  \n  names(df.sourcelinks) <- \n    c(\"node\", \"SourceTotal\")\n  \n  df.sourcelinks\n  \n  df <- merge(df.targetlinks, \n              df.sourcelinks, \n              by = \"node\")\n  df\n  \n  m.info <- nodes.info[nodes.info$month == m,]\n  m.info\n  \n  df$TargetTotal - m.info$departing + m.info$joining\n  \n  df$SourceTotal\n  \n  df$Total <- apply(df[-1], 1, max)\n  df\n  \n  df$name <- nodes.info[df$node+1, \"name\"]\n  df\n  \n  print(sum(df$Total))\n  \n  totals[m,as.character(df$name)] <- df$Total\n\n  print(cbind(totals[m,]))\n}\n\n# For the last month\nm <- months[length(months)]\n{\n  print(m)\n  \n  m.nodes <- nodes.info[nodes.info$month == m, \"node\"]\n  m.nodes\n  \n  m.links <- links.info[\n               links.info$target %in% m.nodes, \n               c(\"target\", \"value\")]\n  \n  head(m.links, n = 3)\n  \n  df <- aggregate(m.links$value, \n                  by=list(m.links$target), \n                  FUN = sum)\n  names(df) <- c(\"node\", \"Total\")\n  df\n  \n  df$name <- nodes.info[df$node+1, \"name\"]\n  df\n  \n  print(sum(df$Total))\n  \n  totals[m,as.character(df$name)] <- df$Total\n  \n  print(cbind(totals[m,]))\n}\n\n# Plot\n\ndf <- data.frame(Month = months, totals)\n\ndf[1:5, c(2:3, 11:12)]\n\n\nnodes.colors <- \n  data.frame(node=levels(nodes.info$name), \n             color=levels(nodes.info$color))\n\nrownames(nodes.colors) <- nodes.colors$node\n\nnodes.colors\n\ncolor <- nodes.colors[\n  order.levels[length(order.levels):1], \n  \"color\"]\n\ncolor <- as.character(color)\ncolor\n\ncolor <- paste0('\"', color, '\"')\ncolor <- paste0(color, collapse=\",\")\ncolor <- paste0('[', color, ']')\n\ncolor\n\nchart6 <- \n  gvisColumnChart(\n    df,\n    options=list(\n      height=750, width=850,\n      isStacked = TRUE,\n      colors=color))\nplot(chart6)\n\nprint(chart6, file = \"chart6.html\")\n\n\n\n\n\n\n\n  ",
    "created" : 1511984164479.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1786646918",
    "id" : "D5A77902",
    "lastKnownWriteTime" : 1511984205,
    "last_content_update" : 1511984205894,
    "path" : "~/My Files/Teachng/2017/Fall/Classroom/Class 9/Code/Game Analytics/GameAnalytics_Code.R",
    "project_path" : "GameAnalytics_Code.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}